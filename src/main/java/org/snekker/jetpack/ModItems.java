package org.snekker.jetpack;import net.fabricmc.fabric.api.itemgroup.v1.FabricItemGroup;import net.minecraft.item.ArmorItem;import net.minecraft.item.Item;import net.minecraft.item.ItemGroup;import net.minecraft.item.ItemStack;import net.minecraft.item.equipment.EquipmentType;import net.minecraft.registry.Registries;import net.minecraft.registry.Registry;import net.minecraft.registry.RegistryKey;import net.minecraft.registry.RegistryKeys;import net.minecraft.text.Text;import net.minecraft.util.Identifier;public class ModItems {//ITEM GROUP    public static final RegistryKey<ItemGroup> CUSTOM_ITEM_GROUP_KEY = RegistryKey.of(Registries.ITEM_GROUP.getKey(), Identifier.of(Jetpack.MOD_ID, "item_group"));    public static final ItemGroup CUSTOM_ITEM_GROUP = FabricItemGroup.builder()            .icon(() -> new ItemStack(ModItems.JETPACK))            .displayName(Text.translatable("itemGroup.jetpacks"))            .build();//REGISTRY KEY    public static Item register(Item item, RegistryKey<Item> registryKey) {        Item registeredItem = Registry.register(Registries.ITEM, registryKey.getValue(), item);        return registeredItem;    }//JETPACK    public static final RegistryKey<Item> JETPACK_KEY =            RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "jetpack"));    public static final Item JETPACK = register(            new JetpackArmorItem(new Item.Settings().registryKey(JETPACK_KEY)),            JETPACK_KEY    ); //FULL FUEL CELL    public static final RegistryKey<Item> FUEL_CELL_KEY =            RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "fuel_cell"));    public static final Item FUEL_CELL = register(            new Item(new Item.Settings().registryKey(FUEL_CELL_KEY)),            FUEL_CELL_KEY    );//EMPTY FUEL CELL    public static final RegistryKey<Item> EMPTY_FUEL_CELL_KEY =            RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "empty_fuel_cell"));    public static final Item EMPTY_FUEL_CELL = register(            new Item(new Item.Settings().registryKey(EMPTY_FUEL_CELL_KEY)),            EMPTY_FUEL_CELL_KEY    );//THRUSTERpublic static final RegistryKey<Item> THRUSTER_KEY =        RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "thruster"));    public static final Item THRUSTER = register(            new Item(new Item.Settings().registryKey(THRUSTER_KEY)),            THRUSTER_KEY    );//JET ENGINEpublic static final RegistryKey<Item> JET_ENGINE_KEY =        RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "jet_engine"));    public static final Item JET_ENGINE = register(            new Item(new Item.Settings().registryKey(JET_ENGINE_KEY)),            JET_ENGINE_KEY    ); //PROPELLER public static final RegistryKey<Item> PROPELLER_KEY =         RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "propeller"));    public static final Item PROPELLER = register(            new Item(new Item.Settings().registryKey(PROPELLER_KEY)),            PROPELLER_KEY    );//JETPACKARMOR  /*  public static final RegistryKey<Item> JETPACK_CHESTPLATE_KEY = RegistryKey.of(RegistryKeys.ITEM, Identifier.of(Jetpack.MOD_ID, "jetpack_chestplate"));    public static final Item JETPACK_CHESTPLATE = register(new ArmorItem(JetpackArmorMaterials.INSTANCE, EquipmentType.CHESTPLATE, new Item.Settings().registryKey(JETPACK_CHESTPLATE_KEY).maxDamage(EquipmentType.CHESTPLATE.getMaxDamage(jetpackmaterial.BASE_DURABILITY))), JETPACK_CHESTPLATE_KEY);*/ //INITIALIZE    public static void initialize() {    }}